#!/bin/sh -eux

BACKEND="${BACKEND:-lorax-composer}"
SRPM="$1"

# always remove older versions of these RPMs if they exist
# to ensure newly built packages have been installed
yum -y remove lorax $BACKEND composer-cli

if ! rpm -q beakerlib; then
    if [ $(. /etc/os-release && echo $ID) = "rhel" ]; then
        # prepare additional sources configuration for test scenarios
        # which need beakerlib
        if [ "$BACKEND" == "osbuild-composer" ]; then
            cat > /root/beakerlib-client-repo.toml << __EOF__
name = "beakerlib-client"
url = "https://download.eng.bos.redhat.com/beakerrepos/client/RedHatEnterpriseLinux$$releasever/"
type = "yum-baseurl"
check_ssl = false
check_gpg = false
__EOF__
        fi

        (cd /etc/yum.repos.d; curl -O -L http://download.devel.redhat.com/beakerrepos/beaker-client-RedHatEnterpriseLinux.repo)
        # disable sslverify b/c yum will fail to sync metadata otherwise
        sed -i "s/\(gpgcheck=0\)/\1\nsslverify=0/" /etc/yum.repos.d/beaker-client-RedHatEnterpriseLinux.repo
        # do not remove the repo file. We now have tests which use beakerlib
        # inside their blueprints so this needs to stay on the VM
    fi

    yum install -y beakerlib
fi

if ! rpm -q git; then
    yum install -y git
fi

if ! rpm -q qemu-kvm; then
    yum install -y qemu-kvm
fi

# Grow root partition to make room for images. This only works on Fedora right now.
parted --script /dev/vda resizepart 2 100%
partprobe
pvs --noheadings -opv_name | xargs pvresize
rootlv=$(findmnt --noheadings -oSOURCE /)
lvresize $rootlv -l+100%FREE -r

rm -rf build-results
su builder -c "/usr/bin/mock --no-clean --resultdir build-results --rebuild $SRPM"

# WARNING: this will install both composer-cli and lorax-composer !
# ATM lorax-composer and osbuild-composer backends don't cause RPM conflicts
# and as long as we enable either one of them we should be fine. If/when
# osbuild-composer starts deprecating lorax-composer we should adjust.
packages=$(find build-results -name '*.rpm' -not -name '*.src.rpm')
yum install -y $packages

systemctl enable $BACKEND.socket

if [ -f /usr/bin/docker ]; then
    yum remove -y $(rpm -qf /usr/bin/docker)
fi

if ! rpm -q podman-docker; then
    yum install -y podman-docker
fi
